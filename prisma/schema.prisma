generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Incident {
  id          String   @id @default(cuid())
  type        String?
  severity    String   @default("medium")
  status      String   @default("triggered")
  currentStep String   @default("trigger")
  createdBy   String   @default("analyst")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  indicators      Indicator[]
  recommendations Recommendation[]
  actions         Action[]
  transitions     Transition[]

  @@map("incidents")
}

model Indicator {
  id         String   @id @default(cuid())
  incidentId String
  type       String
  value      String
  confidence Float    @default(0.5)
  createdAt  DateTime @default(now())

  incident Incident @relation(fields: [incidentId], references: [id], onDelete: Cascade)

  @@map("indicators")
}

model Recommendation {
  id         String   @id @default(cuid())
  incidentId String
  action     String
  reason     String
  citation   String
  priority   Int      @default(1)
  applied    Boolean  @default(false)
  category   String   @default("immediate")
  createdAt  DateTime @default(now())

  incident Incident @relation(fields: [incidentId], references: [id], onDelete: Cascade)

  @@map("recommendations")
}

model Action {
  id         String    @id @default(cuid())
  incidentId String
  type       String
  status     String    @default("pending")
  result     String?
  executedAt DateTime?
  createdAt  DateTime  @default(now())

  incident Incident @relation(fields: [incidentId], references: [id], onDelete: Cascade)

  @@map("actions")
}

model Transition {
  id         String   @id @default(cuid())
  incidentId String
  fromStep   String
  toStep     String
  timestamp  DateTime @default(now())
  notes      String?

  incident Incident @relation(fields: [incidentId], references: [id], onDelete: Cascade)

  @@map("transitions")
}
